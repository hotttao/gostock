"""
Code generated by protoc-gen-go-http. DO NOT EDIT.
versions:
protoc-gen-python-http v1.0.1
"""
from abc import ABCMeta
from abc import abstractmethod
from typing import Tuple
from pykit.transport import http
from api.crawler.v1.stock_info_pb2 import StockBasicRequest, StockBasic


class IStockInfoServiceHTTPServer(metaclass=ABCMeta):

    @abstractmethod
    def GetStockInfo(context: http.Context, req: StockBasicRequest) -> Tuple[StockBasic, Exception]:
        pass


def RegisterStockInfoServiceHTTPServer(s: http.Server, srv: IStockInfoServiceHTTPServer):
    r = s.router("/")
    r.get("/stock/<id>", _StockInfoService_GetStockInfo0_HTTP_Handler(r, srv))
    pass


def _StockInfoService_GetStockInfo0_HTTP_Handler(router: http.Router, srv: IStockInfoServiceHTTPServer):
    def _stock_info_hanlder(ctx: http.Context):
        req = StockBasicRequest()
        req = ctx.bind_vars(req)
        # http.SetOperation(ctx, "/api.stock.v1.StockInfoService/GetStockInfo")
        h = router.middleware(srv.GetStockInfo)
        reply = h(ctx, req)
        return ctx.result(reply)
    return _stock_info_hanlder


class StockInfoServiceHTTPClient(metaclass=ABCMeta):

    @abstractmethod
    def GetStockInfo(self, ctx: http.Context, req: StockBasicRequest, *args,
                     **kwargs) -> Tuple[StockBasic, Exception]:
        pass


class StockInfoServiceHTTPClientImpl(StockInfoServiceHTTPClient):
    def __init__(self, cc: http.Client):
        self.cc = cc

    def GetStockInfo(self, ctx: http.Context, req: StockBasicRequest,
                     *args, **kwargs) -> Tuple[StockBasic, Exception]:
        # out = StockBasic()
        # pattern = "/stock/<id>"
        # path = binding.EncodeURL(pattern, req, true)
        # opts = append(opts, http.Operation("/api.stock.v1.StockInfoService/GetStockInfo"))
        # opts = append(opts, http.PathTemplate(pattern))
        # return out, err
        pass


def NewStockInfoServiceHTTPClient(client: http.Client) -> StockInfoServiceHTTPClient:
    return StockInfoServiceHTTPClientImpl(client)
